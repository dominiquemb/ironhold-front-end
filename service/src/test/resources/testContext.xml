<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>es.index.store.type</value>
                <value>memory</value>
            </list>
        </property>
    </bean>


    <bean id="workingDir" class="com.reqo.ironhold.service.beans.WorkingDir" scope="singleton">
        <constructor-arg value="/tmp/workDir-unittest"/>
    </bean>


    <context:annotation-config/>
    <context:component-scan base-package="com.reqo.ironhold"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

    <!-- Storage beans -->
    <bean id="keyStoreService" class="com.reqo.ironhold.storage.security.LocalKeyStoreService">
        <constructor-arg type="java.io.File" value="/tmp/unittest/data/keystore"/>
    </bean>

    <bean id="mimeMailMessageStoreService" class="com.reqo.ironhold.storage.LocalMimeMailMessageStorageService">
        <constructor-arg type="java.io.File" value="/tmp/unittest/data"/>
        <constructor-arg type="java.io.File" value="/tmp/unittest/archive"/>
        <constructor-arg type="com.reqo.ironhold.storage.security.IKeyStoreService" ref="keyStoreService"/>
    </bean>

    <!-- ES beans -->
    <util:map id="esProperties">
        <entry key="cluster.name" value="test"/>
        <entry key="transport.tcp.port" value="11111"/>
        <entry key="http.port" value="11110"/>
        <entry key="index.number_of_shards" value="1"/>
        <entry key="index.number_of_replicas" value="0"/>

    </util:map>

    <bean id="esNode" class="fr.pilato.spring.elasticsearch.ElasticsearchNodeFactoryBean">
        <property name="properties" ref="esProperties"/>
    </bean>

    <bean id="esClient" class="fr.pilato.spring.elasticsearch.ElasticsearchClientFactoryBean">
        <property name="properties" ref="esProperties"/>
    </bean>

    <bean id="indexClient" class="com.reqo.ironhold.storage.es.IndexClient">
        <constructor-arg type="org.elasticsearch.client.Client" ref="esClient"/>
    </bean>

    <bean id="messageIndexService" class="com.reqo.ironhold.storage.MessageIndexService">
        <constructor-arg type="com.reqo.ironhold.storage.es.IndexClient" ref="indexClient"/>
    </bean>

    <bean id="metaDataIndexService" class="com.reqo.ironhold.storage.MetaDataIndexService">
        <constructor-arg type="com.reqo.ironhold.storage.es.IndexClient" ref="indexClient"/>
    </bean>

    <bean id="miscIndexService" class="com.reqo.ironhold.storage.MiscIndexService">
        <constructor-arg type="com.reqo.ironhold.storage.es.IndexClient" ref="indexClient"/>
    </bean>


</beans>