//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.22 at 10:36:41 PM EDT 
//


package com.reqo.ironhold.reader.bloomberg.model.dscl;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.reqo.ironhold.reader.bloomberg.model.dscl package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FileDump_QNAME = new QName("", "FileDump");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.reqo.ironhold.reader.bloomberg.model.dscl
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FileDumpType }
     */
    public FileDumpType createFileDumpType() {
        return new FileDumpType();
    }

    /**
     * Create an instance of {@link DisclaimerType }
     */
    public DisclaimerType createDisclaimerType() {
        return new DisclaimerType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FileDumpType }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "FileDump")
    public JAXBElement<FileDumpType> createFileDump(FileDumpType value) {
        return new JAXBElement<FileDumpType>(_FileDump_QNAME, FileDumpType.class, null, value);
    }

}
